% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{snp_fisher_cpp_parallel}
\alias{snp_fisher_cpp_parallel}
\title{Parallel SNP Fisher's Exact Test Calculation}
\usage{
snp_fisher_cpp_parallel(df_d)
}
\arguments{
\item{df_d}{A data frame containing the following columns:
\itemize{
\item \code{reference}: A character vector with the reference alleles ("A", "C", "G", "T").
\item \code{A}, \code{C}, \code{G}, \code{T}: Integer vectors representing the counts of each nucleotide (A, C, G, T) at each SNP position.
}}
}
\value{
A numeric vector containing the p-values from Fisher's Exact Test for each SNP position.
A p-value of 1 indicates no variation, while smaller values suggest greater variation and statistical significance.
}
\description{
This function performs a parallel computation of Fisher's Exact Test for SNP (single nucleotide polymorphism) data.
It calculates the Fisher's exact test statistic based on nucleotide counts (A, C, G, T) at each SNP position.
The function utilizes parallel processing to efficiently handle large datasets by distributing the computation
across multiple CPU cores using RcppParallel.
}
\details{
The function performs the following steps:
\enumerate{
\item For each SNP position, the nucleotide counts for A, C, G, T are extracted from the input data frame.
\item Intermediate quantities such as \code{cn}, \code{ct}, \code{cr}, and others are computed using parallel processing.
\item Fisher's exact test statistics are calculated for each SNP position using binomial coefficients.
\item The function is optimized for parallel execution, distributing the workload across multiple cores.
}
}
\examples{
df <- data.frame(reference = c("A", "C", "G", "T"),
                 A = c(10, 0, 5, 0),
                 C = c(2, 10, 0, 0),
                 G = c(0, 0, 10, 5),
                 T = c(0, 0, 0, 10))

result <- snp_fisher_cpp_parallel(df)
print(result)

}
\author{
Dzianis D. Sarnatski, Mikalai M. Yatskou
}
