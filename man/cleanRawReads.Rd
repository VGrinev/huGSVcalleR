% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rawReadsQC.R
\name{cleanRawReads}
\alias{cleanRawReads}
\title{Clean up low quality short reads}
\usage{
cleanRawReads(
  fastqDir = NULL,
  fastq1,
  fastq2 = NULL,
  adapters = NULL,
  error = 0.2,
  min_match_flank = 3L,
  anchored = TRUE,
  indels = FALSE,
  tr_score = NULL,
  tr_start = 10,
  tr_end = 30,
  phred = NA,
  k = 3,
  halfwidth = NULL,
  successive = TRUE,
  readl = 0,
  readq = 0,
  readn = 0,
  dustScore = NULL,
  batchSize = NA,
  postfix = "filtered",
  workDir = NULL
)
}
\arguments{
\item{fastqDir}{character string giving the name (or path to and name) of
directory with FASTQ file(-s). NULL by default, which means the current
working directory will be used instead of the specified FASTQ directory.}

\item{fastq1}{character string giving the name of FASTQ file containing
short reads. For paired-end reads, this gives the name of FASTQ file for
first reads in each sequencing library.}

\item{fastq2}{character string including the name of FASTQ file containing
second short reads. NULL by default, which means that the data will be
processed as single-read ones.}

\item{adapters}{character string specifying the name of the tab-delimited
TXT file containing adapter sequences. The default value is NULL, at
which the trimming of adaptor sequence(-s) in short reads is not carried
out. If so, this file must contain the following three fields:
i) adapter_id         - adapter ID;
ii) adapter_name      - adapter name;
iii) adapter_sequence - adapter sequence.}

\item{error}{(when argument adapters is not NULL) numeric value in \link{0, 1}
specifying error rate. The error rate is the proportion of mismatches
allowed between the adapter and the aligned portion of the read. For a
given adapter A, the number of allowed mismatches between each
subsequence s of A and the read is computed as: error * L_s, where L_s
is the length of the subsequence s. Default value is 0.2.}

\item{min_match_flank}{(when argument adapters is not NULL) integer value
giving the number of nucleotides. Do not trim in flanks of the read if
a match has min_match_flank of less length. Default value is 3L (trim
only with >=4 coincidences in a flanking match).}

\item{anchored}{(when argument adapters is not NULL) logical, TRUE by
default. Can the adapter or partial adapter be within (anchored=FALSE)
or only in the terminal region(-s) (anchored=TRUE) of the read?}

\item{indels}{(when argument adapters is not NULL) logical, FALSE by
default. If TRUE, indels are allowed in the alignments of the suffixes
of adapter with the read, at its beginning.}

\item{tr_score}{integer value giving the quality score at or below of which
a nucleotide will be marked as removable. NULL by default, which means
that fixed (but nor dynamic) trimming will be applied to the low quality
ends of short reads.}

\item{tr_start}{integer specifying the number of nucleotides to be removed
from the left end of short reads. This argument is used only when
tr_score=NULL and fixed trimming is carrying out. Default value is 10.}

\item{tr_end}{integer specifying the number of nucleotides to be removed
from the right end of short reads. This argument is used only when
tr_score=NULL and fixed trimming is carrying out. Default value is 30.}

\item{phred}{temporary argument for internal use.}

\item{k}{integer value describing the number of failing nucleotides required
to trigger trimming. This argument is used only with dynamic trimming.
Default value is 3.}

\item{halfwidth}{half width (cycles before or after the current nucleotide
position) in which qualities are assessed. This argument is used only
with dynamic trimming in the sliding window approach. Default value is
NULL, what determines the choice of the successive approach in dynamic
trimming of short reads.}

\item{successive}{logical value indicating whether failures can occur
anywhere in the sequence, or must be successive. If successive=FALSE,
then the kâ€™th failed nucleotide and subsequent are removed. If
successive=TRUE (by default), the first succession of k failed and
subsequent nucleotides are removed. This argument is used only with
dynamic trimming in the successive approach.}

\item{readl}{integer specifying the minimum length of reads to be saved.
Zero is the default, which will allow reads of any length to be saved.}

\item{readq}{integer specifying the minimum quality of reads to be saved.
Zero is the default, which will allow reads of any quality to be saved.}

\item{dustScore}{integer specifying the maximum dust score at which reads to
be saved. By default this argument is NULL and such filter is not used.}

\item{batchSize}{NA (by default) or integer value indicating the maximum
number of reads to be processed at any one time during filtration by
dustScore filter. By default, all reads are processed simultaneously
Smaller values use less memory but are computationally less efficient.}

\item{postfix}{character string that will be added to the output file name
as postfix. "filtered" by default.}

\item{workDir}{character string specifying the path to and name of working
directory. NULL by default that means the current working directory.}
}
\value{
filtered FASTQ file(-s) will be written to the same directory as
input FASTQ file(-s).
}
\description{
Generic function for trimming and filtering of low-quality
DNA- and/or RNA-Seq short reads.
}
\examples{
cleanRawReads(fastqDir="Files_FASTQ",
              fastq1="example_seq.read1.fastq",
              fastq2="example_seq.read2.fastq",
              adapters="adapters.txt",
              error=0.2,
              min_match_flank=3L,
              anchored=TRUE,
              indels=FALSE,
              tr_score=20,
              tr_start=10,
              tr_end=30,
              phred="phred_scores.txt",
              k=3,
              halfwidth=5,
              successive=TRUE,
              readl=100,
              readq=20,
              readn=3,
              dustScore=875,
              batchSize=NA,
              postfix="filtered",
              workDir="D:/Vasily Grinev")
}
\author{
Vasily V. Grinev.
}
