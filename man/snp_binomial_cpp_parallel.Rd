% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{snp_binomial_cpp_parallel}
\alias{snp_binomial_cpp_parallel}
\title{Parallel Calculation of Binomial Probabilities for SNPs}
\usage{
snp_binomial_cpp_parallel(df_d)
}
\arguments{
\item{df_d}{A data frame with the following columns:
\itemize{
\item \code{A}, \code{C}, \code{G}, \code{T}: Integer vectors representing the counts of each nucleotide at each position.
\item \code{reference}: A character vector containing the reference alleles ("A", "C", "G", "T") at each position.
}}
}
\value{
A numeric vector of binomial probabilities, where each element corresponds to a SNP
and represents the cumulative binomial probability of observing the reference allele count
given a mutation probability \code{p}.
}
\description{
This function calculates the cumulative binomial probability for each SNP in the provided dataset.
It takes into account the reference allele at each position and computes the binomial probability
for observing a certain number of non-reference alleles, given a probability of mutation \code{p}.
The function utilizes parallel computation to speed up the process for large datasets.
}
\details{
The function works by first determining the total number of alleles (\code{A[i]}, \code{C[i]}, \code{G[i]}, \code{T[i]})
for each SNP, and calculating how many of those are the reference allele. The binomial probability is
computed for different possible outcomes, considering the mutation probability \code{p} and the number of
non-reference alleles. The calculation is performed in parallel for faster execution on large datasets.

The binomial probability for each SNP is calculated as the sum of binomial probabilities for each
possible count of non-reference alleles (\code{k}), using the binomial coefficient formula and the probability
mass function for the binomial distribution.
}
\examples{
df <- data.frame(reference = c("A", "C", "G", "T"),
                 A = c(10, 0, 5, 0),
                 C = c(2, 10, 0, 0),
                 G = c(0, 0, 10, 5),
                 T = c(0, 0, 0, 10))

result <- snp_binomial_cpp_parallel(df)
print(result)
}
\author{
Dzianis D. Sarnatski, Mikalai M. Yatskou
}
